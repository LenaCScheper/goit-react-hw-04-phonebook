{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","components/NameForm/NameForm.module.css","components/ContactList/ContactList.jsx","components/NameForm/NameForm.jsx","components/Filter/Filter.jsx","components/Container/Container.jsx","App.js","reportWebVitals.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteContact","map","id","name","phone","className","s","container","button","type","onClick","NameForm","state","nameInputId","shortid","generate","phoneInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","this","form","label","onChange","Component","Filter","Container","children","App","initialContacts","filter","addContact","contact","find","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","console","log","prevProps","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cda146c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1d6LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3EQCh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NameForm_form__1u104\",\"container\":\"NameForm_container__1dDCH\",\"label\":\"NameForm_label__3QzYF\",\"input\":\"NameForm_input__1OkMz\",\"button\":\"NameForm_button__1dd01\"};","  \nimport React from 'react';\nimport s from './ContactList.module.css';\n\n\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul >\n    {contacts.map(({ id, name,phone }) => (\n      <li className={ s.container} key={id} >\n        <p className={ s.name}>{name}</p>\n        <p className={ s.name}>{phone}</p>\n        <button className={ s.button} type=\"button\" onClick={() => onDeleteContact(id)}>Удалить</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ContactList;","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport s from './NameForm.module.css';\n\nclass NameForm extends Component{\n    state = {\n        name: '',\n        phone: '',\n        id:''\n    };\n\n    nameInputId = shortid.generate();\n    phoneInputId = shortid.generate();\n\n    handleChange = event => {\n        const { name, value } = event.currentTarget;\n        this.setState({ [name]: value });\n        \n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n       \n       this.props.onSubmit(this.state);\n\n        this.setState({ name: '', phone:''})\n\n    }\n\n    \n    render() {\n        const { name, phone } = this.state;\n        return (\n            <>\n                <form className={s.form } onSubmit={this.handleSubmit}>\n                <div className={s.container}>\n                     <label className={s.label}>\n                            Name\n                            <input\n                                type=\"text\"\n                                name='name'\n                                value={name}\n                                onChange={this.handleChange}\n                                id={this.nameInputId}\n                            />\n                        </label >\n                        <label className={s.label}>\n                            Phone\n                             <input\n                                type=\"text\"\n                                name='phone'\n                                value={phone}\n                                onChange={this.handleChange}\n                                id={this.phoneInputId}\n                            />\n                        </label>\n                        \n\n                     <button className={s.button} type='submit'>Add contact</button>\n\n                    </div>\n                    </form>\n            </>\n        )\n    }\n\n}\n\nexport default NameForm;","import React from 'react';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n    <label className={ s.label}>\n        Name filter <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n);\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import React, { Component } from 'react';\n\nimport shortid from 'shortid';\n\nimport ContactList from './components/ContactList';\nimport initialContacts from './components/ContactList/Contacts.json';\nimport NameForm from './components/NameForm/NameForm';\nimport Filter from './components/Filter';\nimport Container from './components/Container';\n\nimport './App.css';\n\nclass App extends Component {\n    state = {\n        contacts: initialContacts,\n      name: '',\n      filter:''\n    };\n  \n  addContact = ({name,phone}) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      phone\n    };\n\n    const { contacts } = this.state;\n\n    contacts.find(({ name }) => name.toLowerCase() === contact.name.toLowerCase() )\n      ? alert(`${name} is already added.`)\n      : this.setState(({ contacts }) => ({ contacts: [...contacts, contact] }))\n    \n    \n  };\n\n    deleteContact = contactId => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n        }));\n    };\n  \n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\ncomponentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n    console.log(parsedContacts);\n\n  if (parsedContacts) {\n    this.setState({ contacts:parsedContacts})\n}\n  \n  }\n\ncomponentDidUpdate(prevProps, prevState) {\n        if (this.state.contacts !== prevState.contacts) {\n         localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n          }\n    }\n\n    render() {  \n      const { filter  } = this.state;\n      const visibleContacts = this.getVisibleContacts();\n      return (\n          <Container>\n            <h1 className=\"title\"> Phonebook </h1>\n          <h2 className=\"subtitle\">Add new contact</h2>\n          <NameForm onSubmit={this.addContact} />\n          <h2 className=\"subtitle\">Find contact</h2>\n          <Filter value={filter} onChange={this.changeFilter} />\n          <h2 className=\"subtitle\">Contact list</h2>\n          <ContactList contacts = { visibleContacts }\n            onDeleteContact = { this.deleteContact }/>\n          </Container>\n         \n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__2qX37\",\"name\":\"ContactList_name__3PSpW\",\"button\":\"ContactList_button__2krqA\"};"],"sourceRoot":""}